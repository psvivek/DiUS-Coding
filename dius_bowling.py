# -*- coding: utf-8 -*-
"""DiUS_Bowling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K7ZFL0W_LuUqICpT-kmFtK_BovUUi-mH
"""

# Class implementation of Bowling game.
class BowlingGame():
    """
    Contains 4 methods roll, check_strike, check_spare and score.
    roll method appends number of pins to the list and score is used to calculate the overall score at a particular point of the user throw.
    """
    def __init__(self, num_frames = 10):
        self.num_rolls = []
        self.num_frames = num_frames
        self.strike_score = 10
  
    def roll(self, num_pins):
        self.num_rolls.append(num_pins)

    def check_strike(self, roll_idx):
        return self.num_rolls[roll_idx] == self.strike_score

    def check_spare(self, roll_idx):
        total_rolls = self.num_rolls[roll_idx] + self.num_rolls[roll_idx + 1]
        
        return total_rolls == 10    

    def score(self):
        total_score = 0
        roll_idx = 0
        
        for frame in range(self.num_frames):
            if roll_idx >= len(self.num_rolls):
                break

            inc = 2
            
            if self.check_strike(roll_idx):
                points_gained = self.strike_score + self.num_rolls[roll_idx + 1] + self.num_rolls[roll_idx + 2]
                inc = 1
            elif self.check_spare(roll_idx):
                points_gained = 10 + self.num_rolls[roll_idx + 2]
            else:
                points_gained = self.num_rolls[roll_idx] + self.num_rolls[roll_idx + 1]
            
            total_score += points_gained
            roll_idx += inc
        
        return total_score

# Test case #1
bg = BowlingGame()
bg.roll(4)
bg.roll(4)
print('Test case #1 score is {}'.format(bg.score()))

# Test case #2
bg = BowlingGame()
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(0)
print('Test case #2 score is {}'.format(bg.score()))

# Test case #3
bg = BowlingGame()
bg.roll(10)
bg.roll(5)
bg.roll(4)
print('Test case #3 score is {}'.format(bg.score()))

# Test case #4 (Optional - strike)
bg = BowlingGame()
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(0)
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(0)
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(0)
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(0)
bg.roll(4)
bg.roll(6)
bg.roll(10)
bg.roll(5)
bg.roll(5)

print('Test case #4 (strike) score is {}'.format(bg.score()))

# Test case #5 (Optional - spare)
bg = BowlingGame()
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(0)
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(0)
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(0)
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(0)
bg.roll(4)
bg.roll(6)
bg.roll(5)
bg.roll(5)
bg.roll(5)

print('Test case #5 (spare) score is {}'.format(bg.score()))

# Test case #6 (Optional - all strikes)
bg = BowlingGame()
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)
bg.roll(10)

print('Test case #6 (all strikes) score is {}'.format(bg.score()))

